server:
  port: 9595
spring:
  datasource:
    url: jdbc:h2:file:C:\Users\SenolAtac\Desktop\db-2
    driverClassName: org.h2.Driver
    username: sa
    password: sa
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop
  h2:
    console.enabled: true

logging:
  level:
    org.springframework.transaction: trace
    org.springframework.kafka.transaction: debug
#logging.level.org.springframework.transaction=trace
#logging.level.org.springframework.kafka.transaction=debug
#logging.level.org.springframework.jdbc=debug
#  kafka:
#    producer:
#      acks: all
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.apache.kafka.common.serialization.StringSerializer
#      bootstrap-servers: localhost:9092
#      transaction-id-prefix: tx-
#    properties:
#      security.protocol: SASL_PLAINTEXT
#      sasl.mechanism: OAUTHBEARER
#      sasl.mechanism.inter.broker.protocol: OAUTHBEARER
#      inter.broker.listener.name: JWT
#      sasl.jaas.config: org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required  oauth.client.secret="kafka-secret" oauth.username.claim="preferred_username" oauth.access.token="" oauth.client.id="kafka" ;
#      sasl.server.callback.handler.class: io.strimzi.kafka.oauth.server.JaasServerOauthValidatorCallbackHandler
#      sasl.login.callback.handler.class: io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler
#      principal.builder.class: io.strimzi.kafka.oauth.client.JaasKafkaPrincipalBuilder
#      access.token.is.jwt: "true"


#  kafka:
#    producer:
#      transaction-id-prefix: "tx-"